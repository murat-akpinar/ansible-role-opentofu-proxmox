# Steps by Step
---

- name: Add OpenTofu user
  shell: pveum user add "{{ opentofu_user }}" --comment "OpenTofu account"
  register: tofu_user
  changed_when: "'created user' in tofu_user.stdout"

- name: Set password for OpenTofu user
  shell: pveum user passwd "{{ opentofu_user }}@pve" --password "{{ opentofu_password }}"
  when: tofu_user is changed
  no_log: true

- name: Add OpenTofu role
  shell: pveum role add {{ opentofu_role }} -privs "Datastore.AllocateSpace Datastore.Audit Pool.Allocate Sys.Audit Sys.Console Sys.Modify VM.Allocate VM.Audit VM.Clone VM.Config.CDROM VM.Config.Cloudinit VM.Config.CPU VM.Config.Disk VM.Config.HWType VM.Config.Memory VM.Config.Network VM.Config.Options VM.Migrate VM.Monitor VM.PowerMgmt SDN.Use"
  register: tofu_role
  changed_when: false

- name: Assign role to OpenTofu user
  shell: pveum aclmod / -user {{ opentofu_user }} -role {{ opentofu_role }}
  when: tofu_role is succeeded
  register: tofu_role
  changed_when: false

- name: Add token for OpenTofu user
  shell: pveum user token add {{ opentofu_user }} fortofu -expire 0 -privsep 0 -comment "tofu token"
  when: tofu_role is succeeded
  register: tofu_token
  changed_when: false

- name: Extract token value
  set_fact:
    token_value: "{{ tofu_token.stdout_lines | select('search', '^│\\s*value\\s*│') | map('regex_replace', '^│\\s*value\\s*│\\s*(\\S+)\\s*│$', '\\1') | list | first }}"

- name: Debug - Output of token value
  debug:
    msg: "Token value: {{ token_value }}"
